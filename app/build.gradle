plugins {
    id 'application'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id 'jacoco'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-json'

    // Monitoring et observabilité
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Outils supplémentaires
    implementation 'com.google.guava:guava:31.1-jre'

    // Base de données
    runtimeOnly 'org.postgresql:postgresql:42.7.3'
    runtimeOnly 'com.h2database:h2'

    // Spring Security et JWT
    implementation 'org.springframework.security:spring-security-crypto'
    implementation 'org.springframework.security:spring-security-core:6.1.2'
    implementation 'org.springframework.security:spring-security-web:6.1.2'
    implementation 'org.springframework.security:spring-security-config:6.1.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.mindrot:jbcrypt:0.4'

    // Spring Web (pour les annotations manquantes)
    implementation 'org.springframework:spring-web'
    implementation 'org.springframework:spring-webmvc'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'org.example.Main'
}

jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    ignoreFailures = true
    jvmArgs += ["-XX:+IgnoreUnrecognizedVMOptions", "-XX:+UnlockDiagnosticVMOptions", "-XX:+LogVMOutput"]
    testLogging {
        showStandardStreams = true
    }
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java', 'app/src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources', 'app/src/test/resources']
        }
    }
}

jar {
    destinationDirectory = file("$buildDir/libs")
}
