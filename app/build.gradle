plugins {
    id 'application'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.postgresql:postgresql:42.7.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'org.example.Main'
}

jacoco {
    toolVersion = "0.8.9"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

// Configures the JaCoCo plugin to enforce code coverage rules.
// The `jacocoTestCoverageVerification` block is used to specify the rules for code coverage verification.
// Inside the `violationRules` block, a rule is defined to set the minimum coverage limit.
// The `limit` block specifies that the minimum code coverage required is 90% (0.90).
// If the code coverage is below this threshold, the build will fail.
/* jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.90
            }
        }
    }
}
*/
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    ignoreFailures = true // Ajoutez cette ligne pour ignorer les Ã©checs de tests
}